version: '3.7'

services:
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    depends_on:
      - postgres
      - migration
      - trino-coordinator
    volumes:
      - ./api:/home/app/datadocai/api
      - ./docker/trino/certificate.pem:/home/app/datadocai/api/certificate.pem
    env_file:
      - .env-docker
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    depends_on:
      - backend
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    command: npm run dev
    environment:
      - NODE_ENV=development
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net


  migration:
    build:
      context: .
      dockerfile: backend.Dockerfile
    user: 1001:1001
    env_file:
      - .env-docker
    entrypoint: [ "" ]
    depends_on:
      - postgres
    volumes:
      - ./api:/home/app/datadocai/api
    command: bash -c "python manage.py makemigrations && python manage.py migrate"
    networks:
      - net

  trino-coordinator:
    image: trinodb/trino:435
    container_name: trino-coordinator
    ports:
      - "8443:8443"
      - "8080:8080"
    volumes:
      - ./docker/trino/coordinator/etc:/etc/trino:ro
    depends_on:
      - postgres-init
    networks:
      - net

  postgres:
    ports:
      - "5432:5432"
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: trino
      POSTGRES_PASSWORD: trino
    networks:
      - net

  postgres-init:
    image: postgres:12
    container_name: postgres-init
    depends_on:
      - postgres
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      POSTGRES_USER: trino
      POSTGRES_PASSWORD: trino
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: postgres
    command: >
      sh -c 'until pg_isready -h $$POSTGRES_HOST -U $$POSTGRES_USER; do sleep 1; done;
      PGPASSWORD=$$POSTGRES_PASSWORD psql -h $$POSTGRES_HOST -U $$POSTGRES_USER -d $$POSTGRES_DATABASE -f /docker-entrypoint-initdb.d/init.sql'
    networks:
      - net

  ollama:
    image: ollama/ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    env_file:
      - .env-ollama
    ports:
      - 11434:11434
    volumes:
      - ./ollama:/root/.ollama
    #entrypoint: [""]
    #command: bash -c "ollama serve & sleep 10; ollama run llama3.1:8b"
    command: serve

networks:
  net: